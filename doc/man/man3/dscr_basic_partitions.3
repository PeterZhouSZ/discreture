.TH "dscr::basic_partitions< IntType >" 3 "Fri Feb 26 2016" "Version 1" "discreture" \" -*- nroff -*-
.ad l
.nh
.SH NAME
dscr::basic_partitions< IntType > \- 
.PP
class of partitions of the number n\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <partitionold\&.hpp>\fP
.SS "Classes"

.in +1c
.ti -1c
.RI "class \fBiterator\fP"
.br
.RI "\fIForward iterator class\&. \fP"
.ti -1c
.RI "class \fBreverse_iterator\fP"
.br
.RI "\fIForward Iterator class\&. \fP"
.in -1c
.SS "Public Types"

.in +1c
.ti -1c
.RI "typedef long int \fBdifference_type\fP"
.br
.ti -1c
.RI "typedef unsigned long int \fBsize_type\fP"
.br
.ti -1c
.RI "typedef vector< int > \fBvalue_type\fP"
.br
.ti -1c
.RI "typedef vector< int > \fBpartition\fP"
.br
.ti -1c
.RI "typedef long long int \fBdifference_type\fP"
.br
.ti -1c
.RI "typedef unsigned long long int \fBsize_type\fP"
.br
.ti -1c
.RI "typedef vector< IntType > \fBvalue_type\fP"
.br
.ti -1c
.RI "typedef vector< IntType > \fBpartition\fP"
.br
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBbasic_partitions\fP (int n)"
.br
.ti -1c
.RI "const \fBiterator\fP & \fBbegin\fP () const "
.br
.ti -1c
.RI "const \fBiterator\fP & \fBend\fP () const "
.br
.ti -1c
.RI "\fBbasic_partitions\fP (IntType n)"
.br
.RI "\fIConstructor\&. \fP"
.ti -1c
.RI "size_type \fBsize\fP () const "
.br
.RI "\fIThe total number of partitions\&. \fP"
.ti -1c
.RI "IntType \fBget_n\fP () const "
.br
.ti -1c
.RI "const \fBiterator\fP & \fBbegin\fP () const "
.br
.ti -1c
.RI "const \fBiterator\fP & \fBend\fP () const "
.br
.ti -1c
.RI "const \fBreverse_iterator\fP & \fBrbegin\fP () const "
.br
.ti -1c
.RI "const \fBreverse_iterator\fP & \fBrend\fP () const "
.br
.in -1c
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "static vector< int > \fBconjugate\fP (const vector< int > &P)"
.br
.ti -1c
.RI "static void \fBnext_partition\fP (partition &data, IntType n)"
.br
.ti -1c
.RI "static void \fBprev_partition\fP (partition &data, IntType n)"
.br
.ti -1c
.RI "static partition \fBconjugate\fP (const partition &P)"
.br
.in -1c
.SH "Detailed Description"
.PP 

.SS "template<class IntType>class dscr::basic_partitions< IntType >"
class of partitions of the number n\&. 


.PP
\fBParameters:\fP
.RS 4
\fIIntType\fP should be an integral type with enough space to store n and k\&. It can be signed or unsigned\&. 
.SH "Example:"
.PP
.RE
.PP
.PP
.nf
partitions X(6);
for (auto& x : X)
    cout << x << " ";
.fi
.PP
.PP
Prints out: 
.PP
.nf
[ 1 1 1 1 1 1 ] [ 2 1 1 1 1 ] [ 3 1 1 1 ] [ 2 2 1 1 ] [ 4 1 1 ] [ 3 2 1 ] [ 2 2 2 ] [ 5 1 ] [ 4 2 ] [ 3 3 ] [ 6 ] 
.fi
.PP
 
.SH "Constructor & Destructor Documentation"
.PP 
.SS "template<class IntType > \fBdscr::basic_partitions\fP< IntType >::\fBbasic_partitions\fP (IntTypen)\fC [inline]\fP"

.PP
Constructor\&. 
.PP
\fBParameters:\fP
.RS 4
\fIn\fP is an integer >= 0 
.RE
.PP

.SH "Member Function Documentation"
.PP 
.SS "template<class IntType > size_type \fBdscr::basic_partitions\fP< IntType >::size () const\fC [inline]\fP"

.PP
The total number of partitions\&. 
.PP
\fBReturns:\fP
.RS 4
p_n 
.RE
.PP


.SH "Author"
.PP 
Generated automatically by Doxygen for discreture from the source code\&.
