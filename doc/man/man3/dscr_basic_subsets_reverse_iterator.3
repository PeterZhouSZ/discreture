.TH "dscr::basic_subsets< BoolType >::reverse_iterator" 3 "Fri Feb 26 2016" "Version 1" "discreture" \" -*- nroff -*-
.ad l
.nh
.SH NAME
dscr::basic_subsets< BoolType >::reverse_iterator \- 
.PP
Reverse random access iterator class\&. It's much more efficient as a bidirectional iterator than purely random access\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <Subsets\&.hpp>\fP
.PP
Inherits iterator< std::random_access_iterator_tag, vector< BoolType > >\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBreverse_iterator\fP (size_t n)"
.br
.ti -1c
.RI "\fBreverse_iterator\fP & \fBoperator++\fP ()"
.br
.ti -1c
.RI "\fBreverse_iterator\fP & \fBoperator--\fP ()"
.br
.ti -1c
.RI "const vector< BoolType > & \fBoperator*\fP ()"
.br
.ti -1c
.RI "const vector< BoolType > & \fBoperator*\fP () const "
.br
.ti -1c
.RI "\fBreverse_iterator\fP & \fBoperator+=\fP (difference_type m)"
.br
.RI "\fIRandom access capabilities to the iterators\&. \fP"
.ti -1c
.RI "\fBreverse_iterator\fP & \fBoperator-=\fP (difference_type n)"
.br
.ti -1c
.RI "size_type \fBID\fP () const "
.br
.ti -1c
.RI "bool \fBoperator==\fP (const \fBreverse_iterator\fP &it)"
.br
.ti -1c
.RI "bool \fBoperator!=\fP (const \fBreverse_iterator\fP &it)"
.br
.ti -1c
.RI "bool \fBis_at_end\fP () const "
.br
.ti -1c
.RI "void \fBreset\fP (BoolType n)"
.br
.in -1c
.SS "Friends"

.in +1c
.ti -1c
.RI "class \fBbasic_subsets\fP"
.br
.ti -1c
.RI "\fBreverse_iterator\fP \fBoperator+\fP (\fBreverse_iterator\fP lhs, difference_type n)"
.br
.ti -1c
.RI "\fBreverse_iterator\fP \fBoperator-\fP (\fBreverse_iterator\fP lhs, difference_type n)"
.br
.ti -1c
.RI "difference_type \fBoperator-\fP (const \fBreverse_iterator\fP &lhs, const \fBreverse_iterator\fP &rhs)"
.br
.in -1c
.SH "Detailed Description"
.PP 

.SS "template<class BoolType>class dscr::basic_subsets< BoolType >::reverse_iterator"
Reverse random access iterator class\&. It's much more efficient as a bidirectional iterator than purely random access\&. 
.SH "Member Function Documentation"
.PP 
.SS "template<class BoolType > \fBreverse_iterator\fP& \fBdscr::basic_subsets\fP< BoolType >::reverse_iterator::operator+= (difference_typem)\fC [inline]\fP"

.PP
Random access capabilities to the iterators\&. 
.PP
\fBParameters:\fP
.RS 4
\fIn\fP -> This assumes 0 <= n+ID <= size(n,k) 
.RE
.PP


.SH "Author"
.PP 
Generated automatically by Doxygen for discreture from the source code\&.
