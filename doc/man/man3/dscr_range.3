.TH "dscr::range< IntType >" 3 "Fri Feb 26 2016" "Version 1" "discreture" \" -*- nroff -*-
.ad l
.nh
.SH NAME
dscr::range< IntType > \- 
.PP
Similar to python range(n) or range(n,m) or range(n,m,step)\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <Range\&.hpp>\fP
.SS "Classes"

.in +1c
.ti -1c
.RI "class \fBiterator\fP"
.br
.RI "\fIRandom access iterator class\&. \fP"
.in -1c
.SS "Public Types"

.in +1c
.ti -1c
.RI "typedef long int \fBdifference_type\fP"
.br
.ti -1c
.RI "typedef IntType \fBsize_type\fP"
.br
.ti -1c
.RI "typedef IntType \fBvalue_type\fP"
.br
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBrange\fP (IntType n)"
.br
.RI "\fIConstructor\&. \fP"
.ti -1c
.RI "\fBrange\fP (IntType t_from, IntType t_to, IntType t_step=1)"
.br
.ti -1c
.RI "size_type \fBsize\fP () const "
.br
.ti -1c
.RI "\fBoperator vector< IntType >\fP () const "
.br
.ti -1c
.RI "const \fBiterator\fP & \fBbegin\fP () const "
.br
.ti -1c
.RI "const \fBiterator\fP & \fBend\fP () const "
.br
.ti -1c
.RI "IntType \fBoperator[]\fP (size_type m) const "
.br
.in -1c
.SH "Detailed Description"
.PP 

.SS "template<class IntType>class dscr::range< IntType >"
Similar to python range(n) or range(n,m) or range(n,m,step)\&. 


.PP
\fBParameters:\fP
.RS 4
\fIn\fP is an integer 
.RE
.PP
\fBReturns:\fP
.RS 4
an abstract random-access container whose elements are {n,n+1,n+2,\&.\&.\&.,m-1} 
.RE
.PP

.SH "Constructor & Destructor Documentation"
.PP 
.SS "template<class IntType > \fBdscr::range\fP< IntType >::\fBrange\fP (IntTypen)\fC [inline]\fP"

.PP
Constructor\&. 
.PP
\fBParameters:\fP
.RS 4
\fIn\fP is an integer >= 0 
.RE
.PP


.SH "Author"
.PP 
Generated automatically by Doxygen for discreture from the source code\&.
